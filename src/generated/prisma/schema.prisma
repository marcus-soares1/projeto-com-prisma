// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum LeadStatus {
  New
  Contacted
  Qualified
  Converted
  Unresponsive
  Disqualified
  Archived
}

enum LeadsCampaignsStatus {
  New
  Engaged
  Folloup_Scheduled
  Contacted
  Converted
  Unresponsive
  Disqualified
  Re_Engaged
  Opted_Out
}

model Groups {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  description String
  leads       Leads[] @relation("GroupsLeads")
}

model Leads {
  id        Int              @id @default(autoincrement())
  name      String           @db.VarChar(255)
  email     String           @unique @db.VarChar(255)
  phone     String           @db.VarChar(255)
  status    LeadStatus       @default(New)
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  groups    Groups[]         @relation("GroupsLeads")
  campaigns LeadsCampaigns[]
}

model Campaigns {
  id          Int              @id @default(autoincrement())
  name        String           @db.VarChar(255)
  description String
  startDate   DateTime
  endDate     DateTime?
  leads       LeadsCampaigns[]
}

model LeadsCampaigns {
  leadId     Int
  campaignId Int
  status     LeadsCampaignsStatus
  campaings  Campaigns            @relation(fields: [campaignId], references: [id])
  leads      Leads                @relation(fields: [leadId], references: [id])

  @@id([leadId, campaignId])
}
